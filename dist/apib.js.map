{"version":3,"file":"apib.js","sources":["../lib/apib.js"],"sourcesContent":["'use strict'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { version } from '../package.json'\r\n\r\nclass API {\r\n  axios = axios\r\n\r\n  version = version\r\n\r\n  constructor(options = {}) {\r\n    this.options = options\r\n  }\r\n\r\n  log(...args) {\r\n    if (this.options.debug) {\r\n      console.log(...args) // eslint-disable-line no-console\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 将对象转为 URL QueryString\r\n   *\r\n   * @param {object} data\r\n   */\r\n  _param(data) {\r\n    // https://jsperf.com/array-push-vs-string-concat\r\n    /*\r\n    let ret = []\r\n    Object.keys(data).forEach(v => {\r\n      ret.push(`${encodeURIComponent(v)}=${encodeURIComponent(data[v])}`)\r\n    })\r\n    return ret.join('&')\r\n    */\r\n    var ret = ''\r\n    Object.keys(data).forEach(v => {\r\n      ret = ret + `${encodeURIComponent(v)}=${encodeURIComponent(data[v])}&`\r\n    })\r\n    return ret.slice(0, -1)\r\n  }\r\n\r\n  /**\r\n   * 类型判断\r\n   *\r\n   * @param {*} unknown\r\n   * @return {string}\r\n   */\r\n  _type(unknown) {\r\n    const type = Object.prototype.toString.call(unknown)\r\n    // https://jsperf.com/replace-vs-slice/5\r\n    // return type.replace('[object ', '').replace(']', '').toLowerCase()\r\n    return type.slice(8, -1).toLowerCase()\r\n  }\r\n\r\n  /**\r\n   * 将参数列表转为对象形式\r\n   *\r\n   * @param {array} args 参数原始对象，即 arguments\r\n   * @param {array} names 参数名称对应的数组，可以给默认值，默认值需要能被 JSON.parse 解析。\r\n   *\r\n   * 注意：\r\n   *  - 参数的值支持覆盖\r\n   *  - 在遇到对象之后直接退出\r\n   *\r\n   * 示例：\r\n   *   > _args ([1, 2, {xor: true}], ['offset', 'count'])\r\n   *   < {offset: 1, count: 2, xor: true}\r\n   */\r\n  _args(args, names = []) {\r\n    const options = {}\r\n    names.forEach((item, index) => {\r\n      if (item.indexOf('=') > -1) {\r\n        const temp = item.split('=')\r\n        const name = temp[0]\r\n        names[index] = name\r\n        try {\r\n          options[name] = JSON.parse(temp.slice(1).join('='))\r\n        } catch (e) {\r\n          // ignore\r\n        }\r\n        // const [name, ...value] = item.split('=')\r\n        // names[index] = name\r\n        // try {\r\n        //   options[name] = JSON.parse(value.join('='))\r\n        // } catch (e) {\r\n        //   //\r\n        // }\r\n      }\r\n    })\r\n    for (let i = 0; i < args.length; i++) {\r\n      if (this._type(args[i]) === 'object') {\r\n        Object.assign(options, args[i])\r\n        break\r\n      } else if (\r\n        this._type(args[i]) !== 'undefined'\r\n        && this._type(names[i]) !== 'undefined'\r\n      ) {\r\n        options[names[i]] = args[i]\r\n      }\r\n    }\r\n    return options\r\n  }\r\n\r\n  /**\r\n   * 拼接链接地址\r\n   *\r\n   * @param {array<string>} args\r\n   */\r\n  _join(...args) {\r\n    let result = args[0] || ''\r\n    for (let i = 1; i < args.length; i++) {\r\n      if (args[i]) {\r\n        result = result.replace(/\\/+$/, '') + '/' + args[i].replace(/^\\/+/, '')\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  // 需要自行实现 request 方法，基础方法不再进行提供\r\n  request() {\r\n    throw new Error('Not implemented yet')\r\n  }\r\n\r\n}\r\n\r\nexport default API\r\n"],"names":["API","options","axios","version","log","debug","console","_param","data","ret","Object","keys","forEach","v","encodeURIComponent","slice","_type","unknown","type","prototype","toString","call","toLowerCase","_args","args","names","item","index","indexOf","temp","split","name","JSON","parse","join","e","i","length","assign","_join","result","replace","request","Error"],"mappings":"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"}